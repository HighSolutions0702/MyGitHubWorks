import React, { Component } from 'react';
import Header from '../components/Header';

export default class Home extends Component {
    constructor(props) {
    super(props);
    this.handleClick = this.handleClick.bind(this);
  }
  
  render() {
    return(
      <div className="page-block animated fadeIn row">
        <Header text="Модель навичок братів Дрейфус"/>
        <div className="container card" style={{textAlign: 'justify'}}>
        <div className="page-header" style={{textAlign: 'center'}}>Бажаєте пройти тест?</div>
        <div className="auth" style={{textAlign: 'center'}}>
        <form onSubmit={this.handleClick}>
          <div className="col-md-offset-3 col-md-6 input-group">
            <input type="text" className="form-control" placeholder="Ваше ім'я" ref={(input) => this.input = input}/>
            <div className="input-group-btn">
              <button className="btn btn-default">
                Розпочати <i className="glyphicon glyphicon glyphicon-menu-right"></i>
              </button>
            </div>
          </div>     
        </form>
        </div>
        <div className="page-header" style={{textAlign: 'center'}}>Опис моделі</div>
        <p>В галузі освіти та дослідження операцій, Модель отримання навичок братів Дрейфуc - це модель отримання студентами умінь за допомогою  навчання і практики. Брати Стюарт та Губерт Дрейфус запропонували цю модель в 1980 у впливовому вісімнадцятисторінковому звіті у центрі Дослідження Операцій Університету Каліфорнії (Берклі), для офісу наукових досліджень ВПС США.</p>
        <p>Модель припускає, що студент проходить крізь п'ять різних етапів навчання: новачок, твердий початківець, компетентний, досвідчений, експерт. Кожен етап навчання  описується певними характеристиками студента, поданими нижче в додатку до роботи.</p>
        <p>На  основі  характеристик розроблена семантична модель даних. Модель призначена  для  анкетування бажаючих на предмет оцінки їх належності до певного етапу навчання, або типу програміста. Анкета включає 5-ь блоків питань. Кожному питанню подані відповіді та можливі  оцінки.</p>
        <div className="page-header" style={{textAlign: 'center'}}>Рівні моделі</div>
        <p>Новачок (Novice). Новачки дуже переживають за свою успішність; їх досвіду замало, щоб повести їх у правильному напрямку і вони не знають чи їх вчинки будуть правильними. Новачки зазвичай не хочуть вчитися, зате хочуть досягти миттєвого результату. Вони не знають як реагувати на помилки і тому легко збиваються з пантелику, коли щось іде “не так”. Зате вони можуть бути досить ефективними, коли їм дати набір контекстно незалежних правил у формі “у випадку ХХХ, роби УУУ”. Іншими словами їм необхідний рецепт або алгоритм.</p>
        <p>Твердий початківець (Advanced beginner). Тверді початківці починають вже потроху відступати від фіксованих правил. Вони можуть спробувати якісь задачі самостійно, але у них все ще є труднощі із усуненням проблем, які виникають. Початківці можуть скористатись порадами в правильному контексті, врахувавши свій досвід подібних ситуацій, але ледь-ледь. І хоч вони вже починають формулювати якісь загальні принципи, вони все ще не бачать “всієї картини”. Якщо спробувати надати їм ширший контекст – вони відмахнуться від нього як від недоречного. </p>
        <p>Компетентний (Competent). Компетентні будують правильні моделі проблемної області та ефективно нею користуються. Здатні усувати проблеми з якими раніше не стикались. Про людей на цьому рівні часто кажуть, що вони “мають ініціативу”. Вони можуть вчити новачків і не задовбують експертів. Щоправда їм ще бракує досвіду аби вдало розставити пріоритети при рішенні задач. Власне кажучи, саме з цього рівня людину можна вже назвати інженером – компетентні вирішують задачі, а не працюють за алгоритмом. </p>
        <p>Досвідчений (Proficient). Досвідченим необхідна “повна картина” проблемної області, адже вони хочуть розуміти весь концепт. Вони роблять значний прорив в рамках моделі братів Дрейфус, адже постійно оцінюють виконану роботу і переглядають свої підходи, аби наступного разу бути ще ефективнішими. Вони також можуть навчатись використовуючи чужий досвід. І найголовніше – вони завжди беруть до уваги контекст задачі. Якщо повернутись до програмування, то чудовий приклад ілюстрації – це використання патернів проектування. Лише досвідчені використовують їх виключно там де треба, а не бездумно і повсюдно, бо це круто і модно. </p>
        <p>Експерт (Expert). Експерти – основне джерело знань та інформації в будь-якій сфері. Вони безперестану шукають все кращі і кращі методи роботи. Вони завжди застосовують весь свій велетенський багаж знань у правильному контексті. Вони пишуть книжки, статті та проводять семінари. Це сучасні чаклуни. Експерти керуються інтуїцією . Доктор Хаус, який з одного погляду на пацієнта (або взагалі його медичну картку) міг поставити діагноз – типовий приклад експерта. Експерти працюють за допомогою несвідомого “порівняння з взірцем” (“pattern matching”) по базі свого досвіду. От тільки проблема в тому, що функція “порівняння з взірцем” асинхронна і знаходиться в частині мозку, яка не підконтрольна свідомості.</p>
        </div>
      </div>
    )
  }
  
  handleClick(e) {
    e.preventDefault()
    this.props.route.onClick(this.input.value)
  }
}
