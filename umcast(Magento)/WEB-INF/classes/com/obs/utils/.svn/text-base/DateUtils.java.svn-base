/**
 * 
 */
package com.obs.utils;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;

/**
 * @author ram
 *
 */
public class DateUtils {

	/**
	 * singleton instance
	 */
	private static DateUtils myInstance = null;
	public static DateUtils getInstance()
	{
		if(myInstance == null)
			myInstance = new DateUtils();
		return myInstance;
	}

	/**
	 * get age from dob
	 * @param date
	 * @return int
	 * @throws Exception
	 */
	public int getAge (Date dob) throws Exception{
		if(dob == null){
			return 0;
		}
		Calendar cal1 = new GregorianCalendar();
		Calendar cal2 = new GregorianCalendar();
		int age = 0;
		int factor = 0;
		cal1.setTime(dob);
		cal2.setTime(new Date());
		if(cal2.get(Calendar.DAY_OF_YEAR) < cal1.get(Calendar.DAY_OF_YEAR)) {
			factor = -1;
		}
		age = cal2.get(Calendar.YEAR) - cal1.get(Calendar.YEAR) + factor;
		return age;
	}


	/**
	 * different between two days
	 * @param date1
	 * @param date2
	 * @return no of days(long)
	 * @throws Exception
	 */
	public long diffBetweenTwoDates(Date date1,Date date2) throws Exception{
		long timeDiff = Math.abs(date1.getTime() - date2.getTime());
		long durationDays = timeDiff / (1000 * 3600 * 24); 
		return durationDays;
	}


	/**
	 * get date list from the start date and end date
	 * @param startDate
	 * @param endDate
	 * @return list of date
	 */
	public List<Date> loadDate(Date startDate, Date endDate){
		List<Date> dateList = new ArrayList<Date>();
		if(startDate!=null){
			if(endDate!=null){
				Calendar start = Calendar.getInstance();
				start.setTime(startDate);
				Calendar end  = Calendar.getInstance();
				end.setTime(endDate);
				for (; !start.after(end); start.add(Calendar.DATE, 1)) {	
					dateList.add(start.getTime());
				}
			}
			else{
				dateList.add(startDate);
			}
		}
		return dateList;
	}
}
